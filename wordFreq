<!DOCTYPE html>
<html>
<head>
<style>
 html, body {
    height: 100%;
    margin: 0;
    padding: 0;
}

#content {
    position: relative;
    float: left;
    width: 90%;
    margin-left: 5%;
    margin-right: 5%;
    margin-top: 30px;
    border-radius: 10px;
    border: 1px solid #000000;
}

img {
    padding: 0;
    display: block;
    margin: 0 auto;
    max-height: 80%;
    max-width: 80%;
 
}

table {
    padding: 10;
    display: block;
    margin: 0 auto;
    max-height: 80%;
    max-width: 80%;
  border: 0px solid #000000;
}

#centerImageWidth {
	padding: 0;
	position: absolute;
    left: 0px;
    top: 0px;
	   max-height: 100%;
    max-width: 100%;
	
}

div {
	background-color: #DDFFDD;
	 
}

</style>
</head>

<body>
<div id="centerImageWidth">
<img src="http://etextile-summercamp.org/swatch-exchange/logos/summer-camp_corner_flip_upsidedown.jpg" width="70">
</div>
<img src="http://etextile-summercamp.org/swatch-exchange/logos/swatch-logo-web-2.jpg">
<div id="content">
<form action="wordFreq.php" method="post">
<BR>
<TABLE>
<TR><TD>

<TABLE width='500' border='0'>
<TR><TD>
Year of Swatches      : </TD><TD>
<input type="text" name="year"></TD>
</TR><TR><TD>
Way to order <BR>("alpha" for alphabetical]:</TD><TD>
 <input type="text" name="order"></TD>
 
 </TR><TR><TD>
<input type="submit">
</TD>
</TR></TABLE>
</form>
</TD><TD>


<BR>
</body>
</html>

<?php

$urlArray = [];

if ($_SERVER["REQUEST_METHOD"] == "POST") {
	$year = htmlspecialchars($_POST["year"]);
	$alphabet = htmlspecialchars($_POST["order"]);
}

echo "<TABLE width='500' border='0'><TR><TD>";
echo "Submitted parameters:<BR> year= ".$year."    order= ".$alphabet."<BR>";
$alphabetORnumber  = 1;
if ( $alphabet != "alpha")$alphabetORnumber  = 0;

if ( ($year < 2013) || ( $year > 2017)) {
	echo "Sorry, no swatches for year".$year;
	$year = 2017;
	echo "<BR>Showing swatches of year ".$year;
}
echo "</TD></TR></TABLE>";
echo "<BR><BR>";
echo "</TD></TR></TABLE>";

echo "<BR><BR>";
echo "<TABLE><TR><TD>";
echo " <CENTER><B>Swatches Word Count analysis ".$year."</B></CENTER>";
echo "</TD></TR></TABLE>";
wordFrequency($urlArray, $year, $alphabetORnumber );

function wordFrequency($urlArray, $year, $alphabetORnumber )
{
	
	
$numberOfSwatches = 24;
if ( $year == 2014) $numberOfSwatches = 20;
if ( $year == 2015) $numberOfSwatches = 29;



$url2017 = "http://etextile-summercamp.org/swatch-exchange/category/".$year."/";
$html2017 = file_get_contents( $url2017 );

 

$start1 = 37 + strpos($html2017 , "excerpt-title", 0 );
$start2 = -2 + strpos($html2017 , "rel=", $start1  );
$urlArray[0] =  "http://".substr($html2017, $start1 ,  $start2 - $start1 );
//echo  ($urlArray[0])."<BR>";

for ( $t = 1; $t<$numberOfSwatches;$t++){
$start1 = 37 + strpos($html2017 , "excerpt-title", $start2 - 30 );
$start2 = -2 + strpos($html2017 , "rel=", $start1  );

$urlArray[$t] =  "http://".substr($html2017, $start1 ,  $start2 - $start1 );
//echo  "<a href=".$urlArray[$t].">".$urlArray[$t]."</a>"."<BR>";
}
  
// Get all the html on a page
	$html = "";
	$htmlArray = [];
	$htmlWordArray = [];
	$titleArray = [];
	$swatchTitleArray = [];
 

	for ( $u = 0; $u < count( $urlArray ); $u++)
		{
			$htmlArray[$u] = strtolower(file_get_contents($urlArray[$u] ));
			$startP = 15 + strpos($htmlArray[$u] , "excerpt-title", 0 );
			//echo $startP."  + ";
			$startE = 17+ strpos($htmlArray[$u] , "post-page-content", 0 );
			//echo $startE."  - ";
			$startC = strpos($htmlArray[$u] , "comments", 0 );
			//echo $startC."  - ";
			$nameTestString = strip_tags( strtolower($htmlArray[$u]));
			$startNameAuthor = 8 + strpos($nameTestString , "credit", 0 );
			$startNameAuthorSpace1 = 1+strpos($nameTestString , " ", $startNameAuthor );
			$startNameAuthorSpace2 = 1 +strpos($nameTestString , " ", $startNameAuthorSpace1 );
			
			$authorArray = str_word_count( substr($nameTestString, $startNameAuthor, $startNameAuthorSpace2 - $startNameAuthor + 20), 1);
			
			//swatch name digging
			$startSwatchTitle = 10 + strpos($htmlArray[$u] , "bookmark", $startP -25);
			$startSwatchTitleEND =  0 + strpos($htmlArray[$u] , "</a>", $startSwatchTitle );
			$swatchTitleArray[$u] = substr($htmlArray[$u], $startSwatchTitle, $startSwatchTitleEND-$startSwatchTitle);
			//echo $swatchTitleArray[$u] ."<BR>";
			
			//special cases of names
			if ($authorArray[0] == "beam" ){$authorArray[1] = ""; }
			if ($authorArray[0] == "sasha" ){$authorArray[1] = "de Koninck"; }
			if ($authorArray[0] == "ricardo" ){$authorArray[1] = "O’Nascimento"; }
			if ($authorArray[0] == "martin" ){$authorArray[1] = "de Bie"; }
			
			$authors[$u] = $authorArray[0]." ".$authorArray[1];
			if ( $authors[$u]== "e-textile swatch") $authors[$u] = "Pauline Vierne";
			if ( $authors[$u]== "contrechoc year") $authors[$u] = "Beam";
			if ( $authors[$u]== "Martijn ten") $authors[$u] = "Martijn ten Bhömer";
			//if ( (strpos($urlArray[$u], "bitlace")>-1) && ($year==2014) ) $authors[$u] = "Hannah Perner-Wilson";
			
			if ( (strpos($urlArray[$u], "bitlace")>-1)) {
				$authors[$u] = "Hannah Perner-Wilson";
			}
				
		$html .= strip_tags(substr($htmlArray[$u], $startE, $startE - $startC));//reducing to the real post text
		$htmlArray[$u] = strip_tags(substr($htmlArray[$u], $startE, $startE - $startC));
		
		$htmlWordArray[$u] = str_word_count($htmlArray[$u],1);

		$titleArray[$u] = substr($htmlArray[$u], $startP, $startE - $startP);
		
		//echo "<a href=".$urlArray[$u].">".$authors[$u]."</a>"." ";
		//echo ($u+1)." ".strip_tags($titleArray[$u])." - author : "."<a href=".$urlArray[$u].">".$authors[$u]."</a>". "<BR>";
		
		
		}
		

	
	 
// Get an array of all the words
$allWordsArray = str_word_count( strip_tags($html), 1);

$totalAllWordsArray = count($allWordsArray);

// Get the amount of times a word appears on the page
$wordCount = array_count_values($allWordsArray);

//$wordCount = array_count_values(array_map('strtolower', $wordCount));

arsort($wordCount);

//$alphabetSortWords = sort( $wordCount);

// Get the top 20 words
$wordCount = array_splice($wordCount, 0, 500);
 
// Loop through all the word count array and work out the percentage of a word appearing on the page
$percentageCount = [];

$specialWords = ["led","stitch","strip","stitch","tarnish","textile","textiles",
"touch","vinyl","viscose","vliesofix","weaving","fabric","thread","conductive",
"thermochromic","battery","copper","cotton","emboridery","knitted","knitting","led","plastic","polyester","voltage","zardozi","accelerometer","adhesive","arduino","attiny","beads",
"blackwork","binder","breadboard","board","button","capacitor","coil","color","crochet","felted",
"fibre","optical","folded","folding","fluorescent","hotmelt","knot","metal","liquid","magnets",
"circuit", "sensor",  "print",  "connected",   "electricity",   "machine", "light", "static", "patterns", "plated", "capacitive", "filament", 
"piezo", "woven", "muscle", "switch",   "threads", "microcontroller", "sound", "soldering",   "needle", "laser", "sewing",  "silver", "resistor",   
"stitches", "motif", "technique",  "paper", "programmed",  "interaction",   "current", "coin-cell", "capacitivesensor",  "pixel", "integrated",   
"traces", "weave", "smart", "keyboard", "haptic", "ground",   "motor", "cutting", "probe", "blurrr", "movement",   "power", "files", "electrical",  
"chain", "photochromic", "minus",   "touched", "pigments",   "makeymakey", "visual", "printing", "video", "interactive", "display", "github", 
"bitlace", "fusible", "stick", "sensing", "source",  "technologies", "layer", "synthetic", "turkish", "serial","paillette", "fibers","resistive", 
"scales",  "darlington", "dress", "array", "sequin", "sequins",  "digital",  "radio", "around", "crocheted", "individual", "coated", "biological", 
"chevrette", "cells", "incorporated", "bredies", "process", "history", "normal", "sticky",  "girlfriend", "component", "individually", "interfacing",    "symbolism", "drivers", "organic", "matter", "living", "meanings",  "pepper",  "twitch", "closed", "inputs", "pressure", "combination", "disaster", "colourful", "statex", "hydrochromic", "programming", "pager",   "jacob", "script", "components", "devices",  "scratch", "lynsey", "calder", "shieldex",  "sunlight",   "white", "interface", "generated", "square", "investigate", "functional", "electronic", "varnish", "berlin", "signals", "silkscreen", "printed", "degrees", "press", "woven-signals", "emeteuz", "external",   "setup", "memory", "millis",  "electronics", "animate",   "rabbit", "indicate", "screen", "surface", "kobakant",
"sensors", "crystal", "magnetic", "audio","constantan","yarns","piezoresistive", "energy", "bridge", "rectifier","circuits","waffle", "porcelain", 
"pressure-sensitive", "socket","zero-waste","trembling", "pigment","patchwork",  "conductivity", "flexible","chromel", "resistance", "biocouture",
"stereo","biodegradable", "embroidered","conductors", "aluminum", "linen","signal","amplifier", "antenna", "sustainable","rubbing", "tribo","fiber", 
"friction", "graphical","graphite", "heat-sink", "circuitry", "heatshrink", "binding","stretch",
"analog", "switches","resistors", "noise", "optic",  "embroidery","nichrome", "tulle", 
"cyanotype", "grimm", "kombucha", "silicon", "non-woven", "fibres", "carbon","chainstitch", "velostat", "thermochromics","dyeing","lilypad",
"acrylic","kupfer","bonding", "ecoflex", "sandblasting","oslon", "osram","gluing",
"crystals","latex", "vinegar","veilshield","mycelium", "speaker", "microbiology", "sensory", "vibrating", "tactile","beaded", "bacteria", "chromic","silicone","hydrogen",
"darning","conductive-kombucha", "crystallisation","temperature","allotropes", "amorphous","genetics",];

sort($specialWords );

$notWords = ["should", "important", "which", "References", "Description", "Techniques", "Inspirations", "Credits", "between","making","create","inspired",
"Dimensions", "through", "etextile-summercamp", "other", "function", "about", "Title.", "swatch-exchange", "https", "required", "credits", "comment",
"posting", "reply", "techniques", "description", "dimensions", "leave", "shown", "email", "different", "where", "materials","swatch","textile","layer",
"using","website", "references", "inspirations","link","links","would","within","whole","total","these","their","start","starts","three","times","several",
"project","invention","title","perner-wilson","material","after","giles","center","black","small","simple","photo",
"donneaud","photo","technique","white","values","sample","pattern","diagram","applicable","piece","based","instead","picture","makes",
"first","part","created","example","until"];

sort($notWords);

$allowedWords = ["Beam", "Becca", "led", "smd", "ic", "chip", "cap", "ldr"];

echo "<BR><TABLE><TR  bgcolor='#bbffbb'><TD>";

if ( $alphabetORnumber == 1){
 
	echo "Most used words in alphabetical order<BR>";
 
}else{
	 
	echo "Words in order of most used<BR>";
 	
}
echo "</TD></TR></TABLE>";



$wordArrayWithAuthors = [];
$counterWords = 0;
foreach($wordCount as $words => $val)
{
	
	
	$stop = 0;
	if ( strlen($words )< 5 )
	{
		$stop = 1;
	}
	for ( $i = 0; $i < count($notWords); $i++){
		if ($words == $notWords[$i] )
		{ 
		$stop = 1;}
	}
	for ( $i = 0; $i < count($allowedWords); $i++){
		if ($words == $allowedWords[$i] )
		{ 
		$stop = 0;}
	}
	 
	if ( $stop == 0){
		$wordArrayWithAuthors[$counterWords][0] = $words;
		$wordArrayWithAuthors[$counterWords][1] = $val;
	//echo $counterWords." #:".$val." <B>".$words."</B>. source ";

	$authorVal = "";
	for ( $t = 0; $t < count( $htmlWordArray); $t++){
		  
		if( in_array($words, $htmlWordArray[$t])){ 
			$authorVal .= "<a href=".$urlArray[$t].">".$authors[$t]."</a>".", ";
		 }
	}
	//echo $authorVal;
	$wordArrayWithAuthors[$counterWords][2] = $authorVal;
	$counterWords++;
	//echo "<BR>"; 
	}
}
 

//in number order of alphabetical order
if ( $alphabetORnumber == 1) asort($wordArrayWithAuthors);

 
	echo "<TABLE>";
	echo "<TR  bgcolor='#99ff99'><TD><H4><CENTER>nr</TD><TD><B><H3><CENTER>words<B></TD><TD><H3>#</TD><TD>";
echo "<H3><CENTER>author - links -source</TD>";

echo "</TR>";
$counterWords = 0;
foreach($wordArrayWithAuthors as $words)
{
	echo "<TD bgcolor='#aaffff'>".(1+$counterWords++)." </TD><td bgcolor='#aaffaa'><B>".$words[0]."</B></TD><TD bgcolor='#aaffff'>".$words[1]." </TD><td bgcolor='#aaffaa'>".$words[2]."</TD></TR><TR>";
}

echo "</TR></TABLE>";

//------------------------------------titles links authors
echo "<HR>";
		echo "<TABLE>";
		echo "<TR  bgcolor='#99ff99'><TD>";
echo "<H3><CENTER>swatch name ";
echo "</TD><TD>";
echo "<H3><CENTER>author";
echo "</TD><TD>";
echo "<H3><CENTER>e-textile tag words";
echo "</TD></TR>";
		
		for ($x=0; $x< count($urlArray);$x++){
echo "<TR><TD>";


echo "<a href=".$urlArray[$x].">".$swatchTitleArray[$x]."</a>";
echo "</TD><TD bgcolor='#aaffaa'>";

//echo strip_tags($titleArray[$x])." "."<a href=".$urlArray[$x].">".$authors[$x]."</a>";
echo $authors[$x];
		

echo "</TD><TD bgcolor='#aaffaa'>";


//echo "<a href=".$urlArray[$x].">".$urlArray[$x]."</a>";

for ($h=0; $h< count($specialWords);$h++){
	if ( strpos($htmlArray[$x],$specialWords[$h]) > -1 )
	{
		echo $specialWords[$h].", ";
}
}
}
echo "</TD></TR><TABLE>";
echo "<HR>";
echo "<BR><BR>List of Tag words used in the table (total ".count($specialWords).")<HR>";
for ($h=0; $h< count($specialWords);$h++){
		echo $specialWords[$h].", ";
}
echo "<HR>";
echo "list of words not used as tag word list<BR>";
foreach($wordCount as $words => $val)
{
	if ( in_array($words, $specialWords ) == FALSE )
	{
		if ( strlen($words )> 4 )
			if ( in_array($words, $notWords  ) == FALSE )
		echo '"'.$words.'", ';
}
}
echo "<HR>";
echo "list of words blocked by code<BR>";
for ($h=0; $h< count($notWords
);$h++){
		echo $notWords[$h].", ";
}


}
	
?>





